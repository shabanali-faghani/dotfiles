# Change the prefix key to C-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# ----------------------------------------------------------------------

# Split panes using | and -
bind | split-window -h
bind '\' split-window -h  # the '|' key without Shift!
bind - split-window -v

# The same above but without prefix
bind -n M-| split-window -h
bind -n M-'\' split-window -h
bind -n M-- split-window -v

# ----------------------------------------------------------------------

# Toggle type in all panes simultaneously
bind -n M-x setw synchronize-panes

# ----------------------------------------------------------------------

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# ----------------------------------------------------------------------

# Reload tmux config
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# ----------------------------------------------------------------------

# Enter copy mode and start searching in one go
bind-key / copy-mode \; send-key ?
bind -n C-f copy-mode \; send-key ?

# ----------------------------------------------------------------------

# Switch panes using Alt + Arrow without prefix
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-Right select-pane -R
bind -n M-Left select-pane -L

# ----------------------------------------------------------------------

# Switch windows using Alt + Page-up/down without prefix
bind -n M-Pageup previous-window
bind -n M-Pagedown next-window

# ----------------------------------------------------------------------

# Resize the current pane using Alt + Shift + Arrow without prefix
bind -n M-S-Up resize-pane -U 2
bind -n M-S-Down resize-pane -D 2
bind -n M-S-Right resize-pane -R 2
bind -n M-S-Left resize-pane -L 2

#setw -g aggressive-resize on

# ----------------------------------------------------------------------

# Swap panes using Ctrl + Alt + Arrow without prefix
#bind -n C-M-Up swap-pane -U
#bind -n C-M-Down swap-pane -D
bind -n C-M-Up select-pane -U \; swap-pane -s '!' \; select-pane -U
bind -n C-M-Down select-pane -D \; swap-pane -s '!' \; select-pane -D
bind -n C-M-Right select-pane -R \; swap-pane -s '!' \; select-pane -R
bind -n C-M-Left select-pane -L \; swap-pane -s '!' \; select-pane -L

# ----------------------------------------------------------------------

# Quick and interactive tmux cheatsheet
bind -n M-t display-popup -E "tmux list-keys -N | nl -w2 | fzf --reverse"

# Scratch shell
bind -n M-s display-popup -E "tmux new-session -A -s scratch"

# Tmux actions (under development!)
bind -n M-a display-popup -E 'zsh -c "source ~/.tmux-actions.zsh; actions"'

bind -n M-h display-popup -E "htop"

#setw -g popup-border-lines rounded

# ----------------------------------------------------------------------

# Zoom current pane

# Ctrl-Space is already assigned to fzf-tab completion
#bind-key -n C-Space resize-pane -Z

# It's Ctrl-Enter! (J is written but Enter is read!) Ctrl-j/J also works
#bind-key -n C-J resize-pane -Z       # via conemu
bind-key -n C-M-'M' resize-pane -Z  # in ubuntu
bind-key -n '`' resize-pane -Z

# Highlight zoomed window in the status line
#setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=yellow],}#F#I [#W] '
setw -g window-status-current-format '#{?window_zoomed_flag,#[bg=red],}#F#I [#W] '

# ----------------------------------------------------------------------

# Change active pane border
set -g pane-active-border-style bg=default,fg=red
#set -g pane-active-border-style bg=default,fg=green
#set -g pane-active-border-style bg=default,fg=colour166

set -g pane-border-style fg=cyan
#set -g pane-border-style bg=default,fg=colour245

set -g pane-border-lines "double"

# ----------------------------------------------------------------------

# Set the current running command as panel name
set -g pane-border-status top
#set -g pane-border-format "#{pane_index} [#{pane_title}]"
#set -g pane-border-format "#{pane_index} [#{pane_title}] #[default]"
set -g pane-border-format "#[fg=colour226,bg=black,bold] #{pane_title} #[default]"
#set -g pane-border-format "#P: #{pane_current_command}"

# set the following if pane title is not change to command name:
#set -g automatic-rename off
#and put this in ~/.zshrc
#preexec() {
#  [[ -n "$TMUX" ]] && printf "\033]2;%s\033\\" "$1"
#}

# Set panel name manually
#C-a -> ":" -> "select-pane -T 'NAME'" -> Enter
bind F2 command-prompt "select-pane -T 'ðŸŒŸ %%'"

# ----------------------------------------------------------------------

# Set window titles
set-window-option -g automatic-rename on
set-option -g set-titles on

# Don't rename windows automatically
set-option -g allow-rename off

# Rename window to reflect current program
#setw -g automatic-rename on

# ----------------------------------------------------------------------

# Start windows number @1 Instead of @0
set -g base-index 1
# Make pane numbering consistent with windows
set-window-option -g pane-base-index 1

# Renumber windows when closing
set -g renumber-windows on

# Slightly longer pane indicators display time
set -g display-panes-time 800
# Slightly longer status messages display time
set -g display-time 1000

# Redraw status line every 10 seconds
set -g status-interval 10

# clear both screen and history
#bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# Activity
set -g monitor-activity on
set -g visual-activity off

# ----------------------------------------------------------------------

# General settings
set -g default-terminal "screen-256color"
set -g status-keys vi
set -g history-limit 20000
setw -g mode-keys vi
setw -g clock-mode-style 24
setw -g clock-mode-colour green

# ----------------------------------------------------------------------

# Remove escape key press delay
set -g escape-time 0

# ----------------------------------------------------------------------

# Set inactive/active window styles
#set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style default
#set -g window-active-style 'fg=colour250,bg=black'
#set -g window-active-style 'bg=black'

# ----------------------------------------------------------------------
# --- Status bar overall style
set -g status on
set -g status-interval 5
set -g status-style bg=colour235,fg=colour136

# --- Default window style (inactive windows) ---
set -g window-status-format " #I:#W "
set -g window-status-style bg=colour235,fg=colour244

# --- Active window style (highlighted!) ---
#set -g window-status-current-format " #I:#W "
#set -g window-status-current-format ' #I:#{?window_zoomed_flag,#[bg=red],}#W '
set -g window-status-current-format '#{?window_zoomed_flag,#[bg=red],} #I:#W '
set -g window-status-current-style bg=colour28,fg=colour231,bold

# ----------------------------------------------------------------------

# The following bindings require mouse to be on
#setw -g mouse on  # Mouse is already active (find it above)
# Looks like the -X (or -Y) option is not required to get these bindings working via ssh!

# Double LMB Select & Copy (Word)
bind-key -T copy-mode-vi DoubleClick1Pane \
    select-pane \; \
    send-keys -X select-word \; \
    run-shell "sleep .5s" \; \
    send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
    send-keys -X no-clear
bind-key -n DoubleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-word \; \
    send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
    send-keys -X no-clear

# Triple LMB Select & Copy (Line)
bind-key -T copy-mode-vi TripleClick1Pane \
    select-pane \; \
    send-keys -X select-line \; \
    run-shell "sleep .5s" \; \
    send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
    send-keys -X no-clear
bind-key -n TripleClick1Pane \
    select-pane \; \
    copy-mode -M \; \
    send-keys -X select-line \; \
    run-shell "sleep .5s" \; \
    send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
    send-keys -X no-clear

# Drag and Drop Select & Copy (Selection)
bind-key -T copy-mode-vi MouseDragEnd1Pane \
    run-shell "sleep .5s" \; \
    send-keys -X copy-pipe "xclip -in -f | xclip -in -sel c" \; \
    send-keys -X no-clear

# Middle click to paste from the primary buffer
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"

# Shift insert to paste from the clipboard
unbind-key S-IC
bind-key S-IC run "tmux set-buffer \"$(xclip -o -sel c)\"; tmux paste-buffer"

# Enter to exit from copy-mode (enter to exit!)
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send -X cancel
bind-key -T copy-mode-vi Escape send -X cancel

# Normal copy to system clipboard
# <shift> + mouse => normal selection
# <alt> + mouse => rectangular selection

# ======================================================================

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
